//
//  STPhotoCommentsPresenterTests.swift
//  STPhotoDetails
//
//  Created by Dimitri Strauneanu on 30/07/2019.
//  Copyright (c) 2019 Streetography. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import STPhotoDetails
import XCTest

class STPhotoCommentsPresenterTests: XCTestCase {
    var sut: STPhotoCommentsPresenter!
    var displayerSpy: STPhotoCommentsDisplayLogicSpy!
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        self.setupSTPhotoCommentsPresenter()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    // MARK: - Test setup
    
    func setupSTPhotoCommentsPresenter() {
        self.sut = STPhotoCommentsPresenter()
        
        self.displayerSpy = STPhotoCommentsDisplayLogicSpy()
        self.sut.displayer = self.displayerSpy
    }
    
    // MARK: - Tests
    
    func testPresentWillFetchPhotoCommentsShouldAskTheDisplayerToDisplayWillFetchPhotoComments() {
        self.sut.presentWillFetchPhotoComments()
        XCTAssertTrue(self.displayerSpy.displayWillFetchPhotoCommentsCalled)
    }
    
    func testPresentDidFetchPhotoCommentsShouldAskTheDisplayerToDisplayDidFetchPhotoComments() {
        self.sut.presentDidFetchPhotoComments()
        XCTAssertTrue(self.displayerSpy.displayDidFetchPhotoCommentsCalled)
    }
    
    func testPresentPhotoCommentsShouldAskTheDisplayerToDisplayPhotoComments() {
        self.sut.presentPhotoComments(response: STPhotoComments.PresentComments.Response(comments: [], avatarImageSize: CGSize.zero))
        XCTAssertTrue(self.displayerSpy.displayPhotoCommentsCalled)
    }
    
    func testPresentEmptyStateShouldAskTheDisplayerToDisplayEmptyState() {
        self.sut.presentEmptyState()
        XCTAssertTrue(self.displayerSpy.displayEmptyStateCalled)
    }
    
    func testPresentWillFetchAvatarImageShouldAskTheDisplayerToDisplayWillFetchAvatarImage() {
        self.sut.presentWillFetchAvatarImage(response: STPhotoComments.FetchAvatarImage.Response(displayedComment: STPhotoComments.DisplayedComment(id: "id")))
        XCTAssertTrue(self.displayerSpy.displayWillFetchAvatarImageCalled)
    }
    
    func testPresentDidFetchAvatarImageShouldAskTheDisplayerToDisplayDidFetchAvatarImage() {
        self.sut.presentDidFetchAvatarImage(response: STPhotoComments.FetchAvatarImage.Response(displayedComment: STPhotoComments.DisplayedComment(id: "id")))
        XCTAssertTrue(self.displayerSpy.displayDidFetchAvatarImageCalled)
    }
    
    func testPresentAvatarImageShouldAskTheDisplayerToDisplayAvatarImage() {
        self.sut.presentAvatarImage(response: STPhotoComments.PresentAvatarImage.Response(displayedComment: STPhotoComments.DisplayedComment(id: "id"), image: UIImage()))
        XCTAssertTrue(self.displayerSpy.displayAvatarImageCalled)
    }
}
