//
//  STPhotoCommentsWorkerTests.swift
//  STPhotoDetails
//
//  Created by Dimitri Strauneanu on 30/07/2019.
//  Copyright (c) 2019 Streetography. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import STPhotoDetails
import XCTest

class STPhotoCommentsWorkerTests: XCTestCase {
    var sut: STPhotoCommentsWorker!
    var delegateSpy: STPhotoCommentsWorkerDelegateSpy!
    
    // MARK: - Test lifecycle
    
    override func setUp() {
        super.setUp()
        self.setupSTPhotoCommentsWorker()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    // MARK: - Test setup
    
    func setupSTPhotoCommentsWorker() {
        self.delegateSpy = STPhotoCommentsWorkerDelegateSpy()
        
        self.sut = STPhotoCommentsWorker(delegate: self.delegateSpy)
    }
    
    // MARK: - Tests
    
    func testFetchPhotoComments() {
        let serviceSpy = PhotoCommentsLocalServiceSpy()
        self.sut.photoCommentsService = serviceSpy
        
        self.sut.fetchPhotoComments(photoId: "photoId", page: 0, limit: 0)
        XCTAssertTrue(serviceSpy.fetchPhotoCommentsCalled)
    }
    
    func testFetchPhotoCommentsShouldAskTheDelegateToSendCommentsForSuccessCase() {
        let serviceSpy = PhotoCommentsLocalServiceSpy()
        serviceSpy.shouldFailFetchPhotoComments = false
        self.sut.photoCommentsService = serviceSpy
        
        self.sut.fetchPhotoComments(photoId: "photoId", page: 0, limit: 0)
        XCTAssertTrue(self.delegateSpy.successDidFetchPhotoCommentsCalled)
    }
    
    func testFetchPhotoCommentsShouldAskTheDelegateToSendErrorForFailureCase() {
        let serviceSpy = PhotoCommentsLocalServiceSpy()
        serviceSpy.shouldFailFetchPhotoComments = true
        self.sut.photoCommentsService = serviceSpy
        
        self.sut.fetchPhotoComments(photoId: "photoId", page: 0, limit: 0)
        XCTAssertTrue(self.delegateSpy.failureDidFetchPhotoCommentsCalled)
    }
    
    func testFetchAvatarImage() {
        let serviceSpy = ImageLocalServiceSpy()
        self.sut.imageService = serviceSpy
        
        let displayedComment = STPhotoComments.DisplayedComment(id: "id")
        displayedComment.avatarImageUrl = "https://streetography.com"
        self.sut.fetchAvatarImage(displayedComment: displayedComment)
        XCTAssertTrue(serviceSpy.fetchImageCalled)
    }
    
    func testFetchAvatarImageShouldAskTheDelegateToSendImageForSuccessCase() {
        let serviceSpy = ImageLocalServiceSpy()
        serviceSpy.shouldFailFetchImage = false
        self.sut.imageService = serviceSpy
        
        let displayedComment = STPhotoComments.DisplayedComment(id: "id")
        displayedComment.avatarImageUrl = "https://streetography.com"
        self.sut.fetchAvatarImage(displayedComment: displayedComment)
        XCTAssertTrue(self.delegateSpy.successDidFetchAvatarImageCalled)
    }
    
    func testFetchAvatarImageShouldAskTheDelegateToSendErrorForFailureCase() {
        let serviceSpy = ImageLocalServiceSpy()
        serviceSpy.shouldFailFetchImage = true
        self.sut.imageService = serviceSpy
        
        let displayedComment = STPhotoComments.DisplayedComment(id: "id")
        displayedComment.avatarImageUrl = "https://streetography.com"
        self.sut.fetchAvatarImage(displayedComment: displayedComment)
        XCTAssertTrue(self.delegateSpy.failureDidFetchAvatarImageCalled)
    }
}
