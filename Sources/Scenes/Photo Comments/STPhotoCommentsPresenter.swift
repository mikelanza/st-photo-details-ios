//
//  STPhotoCommentsPresenter.swift
//  STPhotoDetails
//
//  Created by Dimitri Strauneanu on 30/07/2019.
//  Copyright (c) 2019 Streetography. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol STPhotoCommentsPresentationLogic {
    func presentWillFetchPhotoComments()
    func presentDidFetchPhotoComments()
    func presentPhotoComments(response: STPhotoComments.PresentComments.Response)
    
    func presentEmptyState()
    
    func presentWillFetchAvatarImage(response: STPhotoComments.FetchAvatarImage.Response)
    func presentDidFetchAvatarImage(response: STPhotoComments.FetchAvatarImage.Response)
    func presentAvatarImage(response: STPhotoComments.PresentAvatarImage.Response)
}

class STPhotoCommentsPresenter: STPhotoCommentsPresentationLogic {
    weak var displayer: STPhotoCommentsDisplayLogic?
    
    private var dateFormatter: DateFormatter
    
    init() {
        self.dateFormatter = DateFormatter()
        self.dateFormatter.dateStyle = .long
        self.dateFormatter.timeStyle = .none
    }
    
    func presentWillFetchPhotoComments() {
        self.displayer?.displayWillFetchPhotoComments()
    }
    
    func presentDidFetchPhotoComments() {
        self.displayer?.displayDidFetchPhotoComments()
    }
    
    func presentPhotoComments(response: STPhotoComments.PresentComments.Response) {
        self.displayer?.displayPhotoComments(viewModel: STPhotoComments.PresentComments.ViewModel(items: self.displayedComments(comments: response.comments, avatarImageSize: response.avatarImageSize)))
    }
    
    private func displayedComments(comments: [STComment], avatarImageSize: CGSize) -> [STPhotoComments.DisplayedComment] {
        return comments.map({ self.displayedComment(comment: $0, avatarImageSize: avatarImageSize) })
    }
    
    private func displayedComment(comment: STComment, avatarImageSize: CGSize) -> STPhotoComments.DisplayedComment {
        let displayedComment = STPhotoComments.DisplayedComment(id: comment.id)
        displayedComment.name = comment.user?.name ?? ""
        displayedComment.text = comment.text
        displayedComment.time = self.dateFormatter.string(from: comment.createdAt)
        displayedComment.avatarImageUrl = nil // TODO: - Add image url from user's avatar photo!!!
        return displayedComment
    }
    
    func presentEmptyState() {
        self.displayer?.displayEmptyState()
    }
    
    func presentWillFetchAvatarImage(response: STPhotoComments.FetchAvatarImage.Response) {
        self.displayer?.displayWillFetchAvatarImage(viewModel: STPhotoComments.FetchAvatarImage.ViewModel(displayedComment: response.displayedComment))
    }
    
    func presentDidFetchAvatarImage(response: STPhotoComments.FetchAvatarImage.Response) {
        self.displayer?.displayDidFetchAvatarImage(viewModel: STPhotoComments.FetchAvatarImage.ViewModel(displayedComment: response.displayedComment))
    }
    
    func presentAvatarImage(response: STPhotoComments.PresentAvatarImage.Response) {
        self.displayer?.displayAvatarImage(viewModel: STPhotoComments.PresentAvatarImage.ViewModel(displayedComment: response.displayedComment, image: response.image))
    }
}
